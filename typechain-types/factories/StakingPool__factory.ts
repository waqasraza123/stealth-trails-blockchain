/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { StakingPool, StakingPoolInterface } from "../StakingPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "externalPoolId",
        type: "uint256",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "externalPoolId",
        type: "uint256",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "getPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "getStakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRewardsPaid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStakeTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115be806100606000396000f3fe6080604052600436106100a75760003560e01c8063999ffd9711610064578063999ffd97146101e0578063ac4afa381461021d578063ae169a501461025c578063c8b6cbf714610285578063e2bbb158146102c4578063f525cb68146102e0576100a7565b80632f8899f3146100ac578063441a3e70146100e95780635312ea8e1461011257806362736db91461013b57806374a110c2146101785780638da5cb5b146101b5575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610ee7565b61030b565b6040516100e09190610f23565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190610f3e565b61032a565b005b34801561011e57600080fd5b5061013960048036038101906101349190610ee7565b6105de565b005b34801561014757600080fd5b50610162600480360381019061015d9190610fdc565b610771565b60405161016f9190610f23565b60405180910390f35b34801561018457600080fd5b5061019f600480360381019061019a9190610f3e565b610833565b6040516101ac9190610f23565b60405180910390f35b3480156101c157600080fd5b506101ca6109ba565b6040516101d7919061102b565b60405180910390f35b3480156101ec57600080fd5b5061020760048036038101906102029190610fdc565b6109e0565b6040516102149190610f23565b60405180910390f35b34801561022957600080fd5b50610244600480360381019061023f9190610ee7565b6109f4565b60405161025393929190611046565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e9190610ee7565b610a1e565b005b34801561029157600080fd5b506102ac60048036038101906102a79190610fdc565b610baa565b6040516102bb93929190611046565b60405180910390f35b6102de60048036038101906102d99190610f3e565b610be1565b005b3480156102ec57600080fd5b506102f5610dee565b6040516103029190610f23565b60405180910390f35b6000806000838152602001908152602001600020600101549050919050565b60008211801561033c57506002548211155b61037b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610372906110da565b60405180910390fd5b600081116103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b590611146565b60405180910390fd5b600080600084815260200190815260200160002090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000209050828160000154101561046f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610466906111b2565b60405180910390fd5b600061047b3386610df4565b9050808260010160008282546104919190611201565b92505081905550838260000160008282546104ac9190611235565b92505081905550838360010160008282546104c79190611235565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015610514573d6000803e3d6000fd5b5060008260010154826105279190611201565b90506000811115610584573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610578573d6000803e3d6000fd5b50600083600101819055505b3373ffffffffffffffffffffffffffffffffffffffff167f75e161b3e824b114fc1a33274bd7091918dd4e639cede50b78b15a4eea956a218787846040516105ce93929190611046565b60405180910390a2505050505050565b6000811180156105f057506002548111155b61062f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610626906110da565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600081600001549050600082600001819055506000826001018190555060008060008581526020019081526020016000209050818160010160008282546106ca9190611235565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610717573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f75e161b3e824b114fc1a33274bd7091918dd4e639cede50b78b15a4eea956a2185846000604051610763939291906112ae565b60405180910390a250505050565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000154036107d6576000905061082d565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000015490505b92915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bc90611331565b60405180910390fd5b60008311610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff906113c3565b60405180910390fd5b6002600081548092919061091b906113e3565b9190505550604051806060016040528084815260200160008152602001600081525060008060025481526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050507f6a0c7fbf44f6331867816b75328f586816c7ff60b5f3b71d7ccd1da786a9389860025484846040516109a793929190611046565b60405180910390a1600254905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006109ec8383610df4565b905092915050565b60006020528060005260406000206000915090508060000154908060010154908060020154905083565b600081118015610a3057506002548111155b610a6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a66906110da565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090506000610acf3384610df4565b905080826001016000828254610ae59190611201565b92505081905550600082600101541115610ba557600082600101549050600083600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b52573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e27317438583604051610b9b92919061142b565b60405180910390a2505b505050565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b600082118015610bf357506002548211155b610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c29906110da565b60405180910390fd5b60008111610c75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6c90611146565b60405180910390fd5b803414610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cae906114c6565b60405180910390fd5b600080600084815260200190815260200160002090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000209050600081600001541115610d59576000610d3a3386610df4565b905080826001016000828254610d509190611201565b92505081905550505b82816000016000828254610d6d9190611201565b9250508190555042816002018190555082826001016000828254610d919190611201565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca8585604051610de092919061142b565b60405180910390a250505050565b60025481565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002090506000816002015442610e5b9190611235565b9050600063bbf81e0082600080888152602001908152602001600020600001548560000154610e8a91906114e6565b610e9491906114e6565b610e9e9190611557565b905080935050505092915050565b600080fd5b6000819050919050565b610ec481610eb1565b8114610ecf57600080fd5b50565b600081359050610ee181610ebb565b92915050565b600060208284031215610efd57610efc610eac565b5b6000610f0b84828501610ed2565b91505092915050565b610f1d81610eb1565b82525050565b6000602082019050610f386000830184610f14565b92915050565b60008060408385031215610f5557610f54610eac565b5b6000610f6385828601610ed2565b9250506020610f7485828601610ed2565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fa982610f7e565b9050919050565b610fb981610f9e565b8114610fc457600080fd5b50565b600081359050610fd681610fb0565b92915050565b60008060408385031215610ff357610ff2610eac565b5b600061100185828601610fc7565b925050602061101285828601610ed2565b9150509250929050565b61102581610f9e565b82525050565b6000602082019050611040600083018461101c565b92915050565b600060608201905061105b6000830186610f14565b6110686020830185610f14565b6110756040830184610f14565b949350505050565b600082825260208201905092915050565b7f496e76616c696420706f6f6c2049440000000000000000000000000000000000600082015250565b60006110c4600f8361107d565b91506110cf8261108e565b602082019050919050565b600060208201905081810360008301526110f3816110b7565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000611130601d8361107d565b915061113b826110fa565b602082019050919050565b6000602082019050818103600083015261115f81611123565b9050919050565b7f4e6f7420656e6f756768207374616b65642062616c616e636500000000000000600082015250565b600061119c60198361107d565b91506111a782611166565b602082019050919050565b600060208201905081810360008301526111cb8161118f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120c82610eb1565b915061121783610eb1565b925082820190508082111561122f5761122e6111d2565b5b92915050565b600061124082610eb1565b915061124b83610eb1565b9250828203905081811115611263576112626111d2565b5b92915050565b6000819050919050565b6000819050919050565b600061129861129361128e84611269565b611273565b610eb1565b9050919050565b6112a88161127d565b82525050565b60006060820190506112c36000830186610f14565b6112d06020830185610f14565b6112dd604083018461129f565b949350505050565b7f4e6f742074686520636f6e7472616374206f776e657200000000000000000000600082015250565b600061131b60168361107d565b9150611326826112e5565b602082019050919050565b6000602082019050818103600083015261134a8161130e565b9050919050565b7f5265776172642072617465206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b60006113ad60228361107d565b91506113b882611351565b604082019050919050565b600060208201905081810360008301526113dc816113a0565b9050919050565b60006113ee82610eb1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114205761141f6111d2565b5b600182019050919050565b60006040820190506114406000830185610f14565b61144d6020830184610f14565b9392505050565b7f53656e7420455448202f3f7c646f6573206e6f74206d6174636820737065636960008201527f6669656420616d6f756e74000000000000000000000000000000000000000000602082015250565b60006114b0602b8361107d565b91506114bb82611454565b604082019050919050565b600060208201905081810360008301526114df816114a3565b9050919050565b60006114f182610eb1565b91506114fc83610eb1565b925082820261150a81610eb1565b91508282048414831517611521576115206111d2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061156282610eb1565b915061156d83610eb1565b92508261157d5761157c611528565b5b82820490509291505056fea2646970667358221220e1f3f856240e42398e9cb3cb6d2dcb904bd2e267215a19c2aaabeea089ab33c164736f6c634300081c0033";

type StakingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingPool__factory extends ContractFactory {
  constructor(...args: StakingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StakingPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StakingPool__factory {
    return super.connect(runner) as StakingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingPoolInterface {
    return new Interface(_abi) as StakingPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StakingPool {
    return new Contract(address, _abi, runner) as unknown as StakingPool;
  }
}
